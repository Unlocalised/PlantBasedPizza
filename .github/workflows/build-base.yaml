name: Image Build & Push Base Workflow

on:
  workflow_call:
    inputs:
      image-name:
          required: true
          type: string
      dockerfile:
          required: true
          type: string
      unit-test-folder:
          required: true
          type: string
    secrets:
      deploy-role-arn:
        description: 'The role for the AWS IAM role to use for deployment'
        required: true
      ecr-registry:
          required: true

permissions:
  id-token: write
  contents: read

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${{secrets.deploy-role-arn}}
          role-session-name: GitHubActionsSession
      - name: Run Unit Tests
        run: dotnet test ${{ inputs.unit-test-folder }}
      - name: Declare some variables
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: false
          load: true
          tags: ${{ inputs.image-name }}:latest
          context: ./src
          file: ${{ inputs.dockerfile }}
      - uses: aws-actions/amazon-ecr-login@v2
        name: Login to Amazon ECR
        id: login-ecr
      - name: Tag With Commit Hash
        run: docker tag ${{inputs.image-name}}:latest ${{secrets.ecr-registry}}/${{inputs.image-name}}:${{ env.sha_short }}
      - name: Tag With LatestCommit Hash
        run: docker tag ${{inputs.image-name}}:latest ${{secrets.ecr-registry}}/${{inputs.image-name}}:latest
      - name: Push Commit Hash to Registry
        run: docker push ${{secrets.ecr-registry}}/${{inputs.image-name}}:${{ env.sha_short }}
      - name: Push Latest image to Registry
        run: docker push ${{secrets.ecr-registry}}/${{inputs.image-name}}:latest
          
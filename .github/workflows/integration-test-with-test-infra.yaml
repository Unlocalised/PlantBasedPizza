name: Integration Test Base Workflow

on:
  workflow_call:
    inputs:
      service-name:
          required: true
          type: string
      integration-test-compose-file:
          required: true
          type: string
      integration-test-folder:
          required: true
          type: string
      test-infrastructure-folder:
          required: true
          type: string
    secrets:
      deploy-role-arn:
        description: 'The role for the AWS IAM role to use for deployment'
        required: true
      ecr-registry:
          required: true
      dd_api_key:
          required: true

permissions:
  id-token: write
  contents: read

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8'
      - name: Install DD trace
        run: dotnet tool update -g dd-trace
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${{secrets.deploy-role-arn}}
          role-session-name: GitHubActionsSession
      - name: Install cdk
        shell: bash
        run: |
          npm install -g aws-cdk 
      - uses: aws-actions/amazon-ecr-login@v2
        name: Login to Amazon ECR
        id: login-ecr
      - name:
        run: |
          echo "REGISTRY=${{secrets.ecr-registry}}" >> $GITHUB_ENV
          echo "IMAGE_TAG=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
          echo "DD_API_KEY=${{secrets.dd_api_key}}" >> $GITHUB_ENV
      - name: Deploy
        shell: bash
        env:
          COMMIT_HASH: bc5ca84
          DEPLOYMENT_ENV: ${{inputs.environment}}
          BUILD_VERSION: "bc5ca84"
        run: |
          cd ${{ inputs.test-infrastructure-folder }}
          cdk deploy --region eu-west-1 --require-approval never
      - name: docker-compose up
        env:
          DD_API_KEY: ${{secrets.dd_api_key}}
          DD_SITE: datadoghq.eu
        run: docker-compose -f ${{ inputs.integration-test-compose-file }} up -d
      - name: Set Commit Hash Environment Variables
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
      - name: Check running images
        shell: bash
        run: |
          docker ps
      - name: Check running images
        shell: bash
        run: |
          docker ps
      - name: Get all logs
        shell: bash
        run: |
          docker-compose logs
      - name: Get API logs
        shell: bash
        run: |
          docker-compose logs local.orders-api
      - name: Get worker logs
        shell: bash
        run: |
          docker-compose logs local.orders-worker
      - name: Run Integration Tests
        env:
          DD_CIVISIBILITY_AGENTLESS_ENABLED: true
          DD_API_KEY: ${{secrets.dd_api_key}}
          DD_SITE: datadoghq.eu
          BUILD_VERSION: ${{ env.sha_short }}
        run: dd-trace ci run --dd-service=${{inputs.service-name}} --dd-env=ci -- dotnet test ${{ inputs.integration-test-folder }}
      - name: Get all logs
        if: always()
        shell: bash
        run: |
          docker-compose logs
      - name: Get API logs
        if: always()
        shell: bash
        run: |
          docker-compose logs local.orders-api
      - name: Get worker logs
        if: always()
        shell: bash
        run: |
          docker-compose logs local.orders-worker
      - name: Teardown
        run: docker-compose -f ${{ inputs.integration-test-compose-file }} down
      - name: Tear down test infrastructure
        if: always()
        shell: bash
        env:
          COMMIT_HASH: ${{ env.sha_short }}
          DEPLOYMENT_ENV: ${{inputs.environment}}
          BUILD_VERSION: ${{ env.sha_short }}
        run: |
          cd ${{ inputs.test-infrastructure-folder }}
          cdk destroy --region eu-west-1 --force ---all
          